{
	"info": {
		"_postman_id": "5ee4d02c-9b1c-4d10-9f3e-07bd08ec459b",
		"name": "tog",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "370027"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var schema = {",
									"    properties: {",
									"        data: {",
									"            type: \"object\",",
									"            properties: {",
									"                createUser: {",
									"                    type: \"object\",",
									"                    properties: {",
									"                        id: {",
									"                            type: \"string\"",
									"                        },",
									"                        name: {",
									"                            type: \"string\"",
									"                        },",
									"                        externalId: {",
									"                            type: \"string\"",
									"                        },",
									"                        createdAt: {",
									"                            type: \"string\"",
									"                        },",
									"                        updatedAt: {",
									"                            type: \"string\"",
									"                        },",
									"                    },",
									"                    required: [\"id\", \"name\", \"externalId\", \"createdAt\", \"updatedAt\"]",
									"                }",
									"            },",
									"            required: [\"createUser\"]",
									"        },",
									"        required: [\"data\"]",
									"    }",
									"};",
									"",
									"pm.test('Schema is valid', function () {",
									"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateUser($createUserInput: CreateUserInput!) {\n  createUser(createUserInput: $createUserInput) {\n    id\n    name\n    externalId\n    createdAt\n    updatedAt\n  }\n}\n",
								"variables": "{\n  \"createUserInput\": {\n    \"externalId\": \"{{$randomUUID}}\",\n    \"name\": \"{{$randomUserName}}\"\n  }\n}"
							}
						},
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "referendum",
			"item": [
				{
					"name": "referendum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var schema = {",
									"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
									"  \"definitions\": {",
									"    \"Referendum\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"createdAt\": {",
									"          \"type\": \"string\",",
									"          \"format\": \"date-time\"",
									"        },",
									"        \"updatedAt\": {",
									"          \"type\": \"string\",",
									"          \"format\": \"date-time\"",
									"        },",
									"        \"name\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"slug\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"description\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"question\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"answers\": {",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"type\": \"string\"",
									"          }",
									"        },",
									"        \"participants\": {",
									"          \"$ref\": \"#/definitions/ReferendumParticipants\"",
									"        },",
									"        \"participantsExternalIds\": {",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"type\": \"string\"",
									"          }",
									"        },",
									"        \"participantsRoles\": {",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"type\": \"string\"",
									"          }",
									"        },",
									"        \"startDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"endDate\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"votes\": {",
									"          \"$ref\": \"#/definitions/Collection%3CReferendumVote%2Cobject-0.302892750446351%3E\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"answers\",",
									"        \"createdAt\",",
									"        \"description\",",
									"        \"endDate\",",
									"        \"id\",",
									"        \"name\",",
									"        \"participants\",",
									"        \"participantsExternalIds\",",
									"        \"participantsRoles\",",
									"        \"question\",",
									"        \"slug\",",
									"        \"startDate\",",
									"        \"updatedAt\",",
									"        \"votes\"",
									"      ],",
									"      \"additionalProperties\": false",
									"    },",
									"    \"Base<class-491735643-234-1565-491735643-0-1744>\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"type\": \"string\"",
									"        },",
									"        \"createdAt\": {",
									"          \"type\": \"string\",",
									"          \"format\": \"date-time\"",
									"        },",
									"        \"updatedAt\": {",
									"          \"type\": \"string\",",
									"          \"format\": \"date-time\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"id\",",
									"        \"createdAt\",",
									"        \"updatedAt\"",
									"      ],",
									"      \"additionalProperties\": false",
									"    },",
									"    \"BaseEntity<class-491735643-234-1565-491735643-0-1744,\\\"id\\\">\": {",
									"      \"type\": \"object\",",
									"      \"additionalProperties\": false",
									"    },",
									"    \"ReferendumParticipants\": {",
									"      \"type\": \"string\",",
									"      \"enum\": [",
									"        \"ALL\",",
									"        \"BY_NAME\",",
									"        \"BY_ROLE\"",
									"      ]",
									"    },",
									"    \"Collection<ReferendumVote,object-0.302892750446351>\": {",
									"      \"type\": \"object\",",
									"      \"additionalProperties\": false,",
									"      \"properties\": {",
									"        \"owner\": {",
									"          \"type\": \"object\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"owner\"",
									"      ]",
									"    },",
									"    \"ArrayCollection<ReferendumVote,object-0.302892750446351>\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"owner\": {",
									"          \"type\": \"object\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"owner\"",
									"      ],",
									"      \"additionalProperties\": false",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function () {",
									"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateReferendum($createReferendumInput: CreateReferendumInput!) {\n  createReferendum(createReferendumInput: $createReferendumInput) {\n    answers\n    createdAt\n    description\n    endDate\n    id\n    name\n    participants\n    participantsExternalIds\n    participantsRoles\n    question\n    slug\n    startDate\n    updatedAt\n    votes {\n      answer\n      yes\n    }\n  }\n}\n",
								"variables": "{\n  \"createReferendumInput\": {\n    \"description\": \"{{$randomJobDescriptor}}\",\n    \"endDate\": \"2023-07-09T14:11:15.310Z\",\n    \"name\": \"{{$randomNoun}}\",\n    \"participants\": \"All\",\n    \"question\": \"{{$randomLoremSentence}}\",\n    \"slug\": \"{{$randomLoremSlug}}\"\n  }\n}"
							}
						},
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}